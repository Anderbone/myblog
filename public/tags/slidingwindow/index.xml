<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Slidingwindow on Jiyu</title>
    <link>http://localhost:1313/tags/slidingwindow/</link>
    <description>Recent content in Slidingwindow on Jiyu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 06 Feb 2024 17:30:31 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/slidingwindow/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>76. Minimum Window Substring</title>
      <link>http://localhost:1313/leetcode/76/</link>
      <pubDate>Tue, 06 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/76/</guid>
      <description>Given two strings s and t of lengths m and n respectively, return the minimum window substring&#xA;__ of s such that every character in t (including duplicates) is included in the window__. If there is no such substring, return __the empty string __&amp;quot;&amp;quot;. The testcases will be generated such that the answer is unique.&#xA;Example 1: Input: s = &amp;ldquo;ADOBECODEBANC&amp;rdquo;, t = &amp;ldquo;ABC&amp;rdquo; Output: &amp;ldquo;BANC&amp;rdquo; Explanation: The minimum window substring &amp;ldquo;BANC&amp;rdquo; includes &amp;lsquo;A&amp;rsquo;, &amp;lsquo;B&amp;rsquo;, and &amp;lsquo;C&amp;rsquo; from string t.</description>
    </item>
    <item>
      <title>30. Substring with Concatenation of All Words</title>
      <link>http://localhost:1313/leetcode/30/</link>
      <pubDate>Mon, 29 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/30/</guid>
      <description>You are given a string s and an array of strings words. All the strings of words are of the same length. A concatenated substring in s is a substring that contains all the strings of any permutation of words concatenated.&#xA;For example, if words = [&amp;quot;ab&amp;quot;,&amp;quot;cd&amp;quot;,&amp;quot;ef&amp;quot;], then &amp;quot;abcdef&amp;quot;, &amp;quot;abefcd&amp;quot;, &amp;quot;cdabef&amp;quot;, &amp;quot;cdefab&amp;quot;, &amp;quot;efabcd&amp;quot;, and &amp;quot;efcdab&amp;quot; are all concatenated strings. &amp;quot;acdbef&amp;quot; is not a concatenated substring because it is not the concatenation of any permutation of words.</description>
    </item>
    <item>
      <title>3. Longest Substring Without Repeating Characters</title>
      <link>http://localhost:1313/leetcode/3/</link>
      <pubDate>Fri, 26 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/3/</guid>
      <description>Longest Substring Without Repeating Characters - LeetCode&#xA;Given a string s, find the length of the longest substring without repeating characters.&#xA;Example 1: Input: s = &amp;ldquo;abcabcbb&amp;rdquo; Output: 3 Explanation: The answer is &amp;ldquo;abc&amp;rdquo;, with the length of 3.&#xA;Example 2: Input: s = &amp;ldquo;bbbbb&amp;rdquo; Output: 1 Explanation: The answer is &amp;ldquo;b&amp;rdquo;, with the length of 1.&#xA;Example 3: Input: s = &amp;ldquo;pwwkew&amp;rdquo; Output: 3 Explanation: The answer is &amp;ldquo;wke&amp;rdquo;, with the length of 3.</description>
    </item>
    <item>
      <title>209. Minimum Size Subarray Sum</title>
      <link>http://localhost:1313/leetcode/209/</link>
      <pubDate>Thu, 25 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/209/</guid>
      <description>https://leetcode.com/problems/minimum-size-subarray-sum/description/&#xA;Given an array of positive integers nums and a positive integer target, return __the minimal length of a __ subarray&#xA;__ whose sum is greater than or equal to__ target. If there is no such subarray, return 0 instead.&#xA;Example 1: Input: target = 7, nums = [2,3,1,2,4,3] Output: 2 Explanation: The subarray [4,3] has the minimal length under the problem constraint. Example 2: Input: target = 4, nums = [1,4,4] Output: 1 Example 3: Input: target = 11, nums = [1,1,1,1,1,1,1,1] Output: 0</description>
    </item>
    <item>
      <title>239. Sliding Window Maximum</title>
      <link>http://localhost:1313/leetcode/239/</link>
      <pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/239/</guid>
      <description>You are given an array of integers nums, there is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position. Return the max sliding window.&#xA;Example 1: Input: nums = [1,3,-1,-3,5,3,6,7], k = 3 Output: [3,3,5,5,6,7] Explanation: Window position Max &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; &amp;mdash;&amp;ndash; [1 3 -1] -3 5 3 6 7 3 1 [3 -1 -3] 5 3 6 7 3 1 3 [-1 -3 5] 3 6 7 5 1 3 -1 [-3 5 3] 6 7 5 1 3 -1 -3 [5 3 6] 7 6 1 3 -1 -3 5 [3 6 7] 7 Example 2: Input: nums = [1], k = 1 Output: [1]</description>
    </item>
    <item>
      <title>567. Permutation in String</title>
      <link>http://localhost:1313/leetcode/567/</link>
      <pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/leetcode/567/</guid>
      <description>Permutation in String - LeetCode&#xA;Given two strings s1 and s2, return true__ if s2 contains a permutation of s1, or false otherwise__. In other words, return true if one of s1&amp;rsquo;s permutations is the substring of s2.&#xA;Example 1: Input: s1 = &amp;ldquo;ab&amp;rdquo;, s2 = &amp;ldquo;eidbaooo&amp;rdquo; Output: true Explanation: s2 contains one permutation of s1 (&amp;ldquo;ba&amp;rdquo;). Example 2: Input: s1 = &amp;ldquo;ab&amp;rdquo;, s2 = &amp;ldquo;eidboaoo&amp;rdquo; Output: false&#xA;Constraints:&#xA;1 &amp;lt;= s1.</description>
    </item>
  </channel>
</rss>
